Description:
  This template deploys a new VPC, with a pair of public and private subnets spread
  across two Availability Zones. It deploys an internet gateway, with a default
  route on the public subnets. It consist of Database of MySQL Server database,
  s3-glacier,cloudfront as default and other behavior is attached with the LoadBalancer
  which forward the request to an ASG (ec2).

Parameters:
  EnvironmentName:
    Description: Environment purpose
    Type: String
    AllowedValues: [dev, qa, perf, preprod, prod]

  Identifier:
    Description: This will be the main identifier that will perform the prefix for all resources. For example, 'my-project' will create 'my-project-dev-ec2', 'my-project-dev-db', etc.
    Type: String

  MasterUsername:
    Default: admin
    Description: The username for the database system administrator
    Type: String

  MasterPassword:
    Description: Master password for the database (minimum 8 characters)
    Default: NewReport2023
    Type: String
    NoEcho: true

  #TODO see if this parameter is needed

  TagClient:
    Description: The cost-tracking tag 'Client' which is used for billing purposes.
    Type: String

  TagProject:
    Description: The cost-tracking tag 'Project' which is used for billing purposes.
    Type: String

  TagChargeable:
    Description: The cost-tracking tag 'Chargeable' which is used for billing purposes.
    AllowedValues: [TBD, "Yes", "No"]
    Type: String
    Default: TBD

  VpcCIDR:
    Description: The CIDR range for the VPC (recommended to use the default)
    Type: String
    Default: 172.34.0.0/16

  RDSEngine:
    Description: Please enter which type of database
    Type: String
    Default: MySQL

  RDSPort:
    Description: Please enter the Port for RDS
    Type: String
    Default: 3306

  RDSClass:
    Description: The name of the compute and memory capacity classes for the RDS database instance.
    Type: String
    Default: db.m5.large
    AllowedValues:
      - db.t4g.micro
      - db.t3.small
      - db.t3.medium
      - db.t3.large
      - db.t3.xlarge
      - db.t3.2xlarge
      - db.r4.large
      - db.r4.xlarge
      - db.r4.2xlarge
      - db.r4.4xlarge
      - db.r4.8xlarge
      - db.r4.16xlarge*
      - db.r5.large
      - db.r5.xlarge
      - db.r5.2xlarge
      - db.r5.4xlarge
      - db.r5.8xlarge
      - db.m4.large
      - db.m4.xlarge
      - db.m4.2xlarge
      - db.m4.4xlarge
      - db.m4.10xlarge
      - db.m5.large
      - db.m5.xlarge
      - db.m5.2xlarge
      - db.m5.4xlarge
      - db.m5.8xlarge
      - db.m5.12xlarge
    ConstraintDescription: Please choose a valid instance type.

  RDSArchiveClass:
    Description: The name of the compute and memory capacity classes for the RDS database instance.
    Type: String
    Default: db.t3.large
    AllowedValues:
      - db.t4g.micro
      - db.t3.small
      - db.t3.medium
      - db.t3.large
      - db.t3.xlarge
      - db.t3.2xlarge
      - db.r4.large
      - db.r4.xlarge
      - db.r4.2xlarge
      - db.r4.4xlarge
      - db.r4.8xlarge
      - db.r4.16xlarge*
      - db.r5.large
      - db.r5.xlarge
      - db.r5.2xlarge
      - db.r5.4xlarge
      - db.r5.8xlarge
      - db.m4.large
      - db.m4.xlarge
      - db.m4.2xlarge
      - db.m4.4xlarge
      - db.m4.10xlarge
      - db.m5.large
      - db.m5.xlarge
      - db.m5.2xlarge
      - db.m5.4xlarge
      - db.m5.8xlarge
      - db.m5.12xlarge
    ConstraintDescription: Please choose a valid instance type.

  RDSstorage:
    Description: The allocated storage size, specified in gigabytes (GB).
    Type: String
    AllowedPattern: "^([2-9]?[0-9]{1}|[0-9]{3,4}|1[0-5]?[0-9]{3}|16[0-2]?[0-9]{2}|163[0-7]?[0-9]{1}|1638[0-4]?)$"
    ConstraintDescription: "Value must be a valid number between 20-16384."
    Default: 800

  RDSArchivestorage:
    Description: The allocated storage size, specified in gigabytes (GB).
    Type: String
    AllowedPattern: "^([2-9]?[0-9]{1}|[0-9]{3,4}|1[0-5]?[0-9]{3}|16[0-2]?[0-9]{2}|163[0-7]?[0-9]{1}|1638[0-4]?)$"
    ConstraintDescription: "Value must be a valid number between 20-16384."
    Default: 800

  InstanceImageId:
    Description: The Amazon Machine Instance ID (AMI) for the EC2. The default option is for Windows.
    Type: String
    Default: ami-07b63a0cdc48e61fb

  InstanceType:
    Description: EC2 instance type. Please refer to AWS instance type documentation for sizing.
    Type: String
    Default: m3.large
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - r5b.large
      - r5b.xlarge
      - r5b.2xlarge
      - r5b.4xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
    ConstraintDescription: Please choose a valid instance type.

  DiskVolumeSize:
    Default: 80
    Description: EC2 disk volume size in GB. Must be at least 32.
    ConstraintDescription: Must be a number greater or equal to 32
    MinValue: 32
    Type: Number

  KeyName:
    Description: Key Pair for EC2
    Type: 'AWS::EC2::KeyPair::KeyName'

  KmsKeyId:
    Description: KMSKeyId set to default.
    Type: String
    Default: "KMS Key"
  
  Encryption:
    Type: String
    Description: Enable Encryption for the FileSystem?  (Default - true)
    ConstraintDescription: Must be a boolean value (true / false)
    AllowedValues:
      - true
      - false
    Default: true

  InboundPortRDP:
    Description: Allowed IP address for RDP access. The default is the Cambium office.
    Type: String
    Default: 147.236.124.54/32

  InboundPortHTTP:
    Description: Allowed IP address for HTTP access. The default is the Cambium office.
    Type: String
    Default: 147.236.124.54/32

  InboundPortHTTPS:
    Description: Allowed IP address for direct HTTPS access. The default is the Cambium office.
    Type: String
    Default: 147.236.124.54/32

  PublicSubnet1CIDR:
    Description: CIDR range for the public subnet in the first availability zone. (Recommended to use the default.)
    Type: String
    Default: 172.34.10.0/24

  PublicSubnet2CIDR:
    Description: CIDR range for the public subnet in the second availability zone. (Recommended to use the default.)
    Type: String
    Default: 172.34.20.0/24

  PrivateSubnet1CIDR:
    Description: CIDR range for the private subnet in the first availability zone. (Recommended to use the default.)
    Type: String
    Default: 172.34.30.0/24

  PrivateSubnet2CIDR:
    Description: CIDR range for the private subnet in the second availability zone. (Recommended to use the default.)
    Type: String
    Default: 172.34.40.0/24

  PrivateSubnet3CIDR:
    Description: CIDR range for the private subnet in the first availability zone. (Recommended to use the default.)
    Type: String
    Default: 172.34.50.0/24

  PrivateSubnet4CIDR:
    Description: CIDR range for the private subnet in the second availability zone. (Recommended to use the default.)
    Type: String
    Default: 172.34.60.0/24

Resources:
  ApplicationVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref Identifier, !Ref EnvironmentName, "vpc"]]

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value:
            !Join [
              "-",
              [!Ref Identifier, !Ref EnvironmentName, "Internet-gateway"],
            ]

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref ApplicationVPC

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref ApplicationVPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value:
            !Join [
              "-",
              [!Ref Identifier, !Ref EnvironmentName, "subnet-public-az1"],
            ]

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref ApplicationVPC
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: !Ref PublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value:
            !Join [
              "-",
              [!Ref Identifier, !Ref EnvironmentName, "subnet-public-az2"],
            ]

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref ApplicationVPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !Ref PrivateSubnet1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value:
            !Join [
              "-",
              [!Ref Identifier, !Ref EnvironmentName, "subnet-private-az1"],
            ]

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref ApplicationVPC
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: !Ref PrivateSubnet2CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value:
            !Join [
              "-",
              [!Ref Identifier, !Ref EnvironmentName, "subnet-private-az2"],
            ]

  PrivateSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref ApplicationVPC
      AvailabilityZone: eu-central-1a
      CidrBlock: !Ref PrivateSubnet3CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value:
            !Join [
              "-",
              [!Ref Identifier, !Ref EnvironmentName, "subnet-private-az1"],
            ]

  PrivateSubnet4:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref ApplicationVPC
      AvailabilityZone: eu-central-1b
      CidrBlock: !Ref PrivateSubnet4CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value:
            !Join [
              "-",
              [!Ref Identifier, !Ref EnvironmentName, "subnet-private-az2"],
            ]

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref ApplicationVPC
      Tags:
        - Key: Name
          Value:
            !Join [
              "-",
              [!Ref Identifier, !Ref EnvironmentName, "routing-public"],
            ]

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref ApplicationVPC
      Tags:
        - Key: Name
          Value:
            !Join [
              "-",
              [!Ref Identifier, !Ref EnvironmentName, "routing-private-az1"],
            ]

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId: !Ref PrivateSubnet1

  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref ApplicationVPC
      Tags:
        - Key: Name
          Value:
            !Join [
              "-",
              [!Ref Identifier, !Ref EnvironmentName, "routing-private-az2"],
            ]

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      SubnetId: !Ref PrivateSubnet2

  PrivateRouteTable3:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref ApplicationVPC
      Tags:
        - Key: Name
          Value:
            !Join [
              "-",
              [!Ref Identifier, !Ref EnvironmentName, "routing-private-az3"],
            ]

  
  PrivateSubnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable3
      SubnetId: !Ref PrivateSubnet3    

  PrivateRouteTable4:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref ApplicationVPC
      Tags:
        - Key: Name
          Value:
            !Join [
              "-",
              [!Ref Identifier, !Ref EnvironmentName, "routing-private-az4"],
            ]

  
  PrivateSubnet4RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable4
      SubnetId: !Ref PrivateSubnet4    

  # EC2 and ALB Security Groups

  # ApplicationEC2:        
  #   Type: AWS::EC2::Instance
  #   Properties:
  #     ImageId: !Ref InstanceImageId
  #     InstanceType: !Ref InstanceType
  #     BlockDeviceMappings:
  #       - DeviceName: /dev/xvda
  #         Ebs:
  #           VolumeSize: !Ref DiskVolumeSize
  #           VolumeType: gp2
  #     SecurityGroupIds:
  #       - !Ref RestrictedAccessSecurityGroupEc2
  #     SubnetId: !Ref PublicSubnet1
  #     KeyName: !Ref KeyName
  #     Tags:
  #       - Key: Name
  #         Value: !Join ['-', [!Ref Identifier, !Ref EnvironmentName, 'ec2'] ]
  #       - Key: Client
  #         Value: !Ref TagClient
  #       - Key: Project
  #         Value: !Ref TagProject
  #       - Key: Chargeable
  #         Value: !Ref TagChargeable

  RestrictedAccessSecurityGroupEc2:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Join ["-", [!Ref Identifier, !Ref EnvironmentName, "Ec2-sg"]]
      GroupDescription: "Accessible only to the load balancer and the Cambium office"
      VpcId: !Ref ApplicationVPC
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref Identifier, !Ref EnvironmentName, "RDS-sg"]]
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId:
            Fn::GetAtt:
            - LoadBalancerSecurityGroup
            - GroupId    
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          SourceSecurityGroupId:
            Fn::GetAtt:
            - LoadBalancerSecurityGroup
            - GroupId    
        - IpProtocol: tcp
          FromPort: 3389
          ToPort: 3389
          CidrIp: !Ref InboundPortRDP

  RestrictedAccessSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Join ["-", [!Ref Identifier, !Ref EnvironmentName, "RDS-sg"]]
      GroupDescription: "Accessible only to the load balancer and the Cambium office"
      VpcId: !Ref ApplicationVPC
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref Identifier, !Ref EnvironmentName, "RDS-sg"]]
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref RDSPort
          ToPort: !Ref RDSPort
          CidrIp: !Ref InboundPortRDP
        - IpProtocol: tcp
          FromPort: !Ref RDSPort
          ToPort: !Ref RDSPort
          SourceSecurityGroupId:
            Fn::GetAtt:
            - RestrictedAccessSecurityGroupEc2
            - GroupId    


  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription:
        !Join ["-", [!Ref Identifier, !Ref EnvironmentName, "lb-sg"]]
      VpcId: !Ref ApplicationVPC
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref Identifier, !Ref EnvironmentName, "lb-sg"]]
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  # Target Group, Listener and Application  Load Balancer

  EC2TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckProtocol: HTTP
      HealthCheckPath: "/"
      HealthCheckTimeoutSeconds: 15
      HealthyThresholdCount: 5
      Matcher:
        HttpCode: "200"
      Name: !Join ["-", [!Ref Identifier, !Ref EnvironmentName, "lb-target"]]
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: "20"
      # Targets:
      #   - Id: !Ref ApplicationEC2
      #     Port: 80    
      UnhealthyThresholdCount: 3
      VpcId: !Ref ApplicationVPC

  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: fixed-response
          FixedResponseConfig:
            ContentType: "text/plain"
            MessageBody: "Not Authorized !!!"
            StatusCode: "503"
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP

  LoadBalancerListenerHeaderHTTP:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !Ref LoadBalancerListener
      Actions:
        - Type: forward
          TargetGroupArn: !Ref EC2TargetGroup
      Conditions:
        - Field: http-header
          HttpHeaderConfig:
            HttpHeaderName: X-Token-Verify
            Values:
              - l6nsxDx1QDyh1BErDi95MSdG8BgwL39s
      Priority: 1

  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      Name: !Join ["-", [!Ref Identifier, !Ref EnvironmentName, "lb"]]
      Subnets:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      SecurityGroups:
        - !GetAtt LoadBalancerSecurityGroup.GroupId

  # EFS File System

  FileSystem:
    Type: AWS::EFS::FileSystem
    Properties:
      Encrypted: !Ref Encryption
      FileSystemTags:
        - Key: Name
          Value: !Join ["-", [!Ref Identifier, !Ref EnvironmentName, "fileSystem"]]
      # KmsKeyId: !Ref KmsKeyId
      # PerformanceMode: Performance Mode
      # ThroughputMode: Throughput Mode
      # ProvisionedThroughputInMibps: !If [provisionedThroughputMode, !Ref ProvisionedThroughputInMibps, !Ref 'AWS::NoValue']

  MountTarget1:
    Type: AWS::EFS::MountTarget
    Properties: 
      FileSystemId: !Ref FileSystem
      SubnetId: !Ref PublicSubnet1
      SecurityGroups: 
        - !Ref RestrictedAccessSecurityGroupEc2

  MountTarget2:
    Type: AWS::EFS::MountTarget
    Properties: 
      FileSystemId: !Ref FileSystem
      SubnetId: !Ref PublicSubnet2
      SecurityGroups: 
        - !Ref RestrictedAccessSecurityGroupEc2      

  # MountTargetSecurityGroup:
  #   Type: AWS::EC2::SecurityGroup
  #   Properties:
  #     GroupDescription: FileSystem Security Group
  #     VpcId: !Ref VpcId
  #     GroupName: !Join ["-", [!Ref Identifier, !Ref EnvironmentName, "EFS-sg"]]
  #     SecurityGroupIngress:
  #       - IpProtocol: "tcp"
  #         FromPort: !Ref FileSharePort
  #         ToPort: !Ref FileSharePort
  #         SourceSecurityGroupId: !Ref OriginSecurityGroup


  # RDS with Security Group
  ApplicationDB:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier:
        !Join ["-", [!Ref Identifier, !Ref EnvironmentName, "db"]]
      Engine: !Ref RDSEngine
      MasterUsername: !Ref MasterUsername
      MasterUserPassword: !Ref MasterPassword
      DBInstanceClass: !Ref RDSClass
      DBSubnetGroupName: !Ref DBSubnetGroup
      LicenseModel: general-public-license
      MonitoringInterval: 0
      PubliclyAccessible: true
      MaxAllocatedStorage: 2000
      MultiAZ: false
      AllocatedStorage: !Ref RDSstorage
      VPCSecurityGroups:
        - Fn::GetAtt: [ RestrictedAccessSecurityGroup, GroupId ]
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref Identifier, !Ref EnvironmentName, "db"]]
        - Key: Client
          Value: !Ref TagClient
        - Key: Project
          Value: !Ref TagProject
        - Key: Chargeable
          Value: !Ref TagChargeable
      

  DBSubnetGroup:
    Type: "AWS::RDS::DBSubnetGroup"
    Properties:
      DBSubnetGroupDescription: Subnets for the database
      SubnetIds:
        - Ref: PrivateSubnet1
        - Ref: PrivateSubnet2

  # RDS archive with Security Group
  ApplicationarchiveDB:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier:
        !Join ["-", [!Ref Identifier, !Ref EnvironmentName, "archive-db"]]
      Engine: !Ref RDSEngine
      MasterUsername: !Ref MasterUsername
      MasterUserPassword: !Ref MasterPassword
      DBInstanceClass: !Ref RDSArchiveClass
      DBSubnetGroupName: !Ref DBSubnetarchiveGroup
      LicenseModel: general-public-license
      MonitoringInterval: 0
      PubliclyAccessible: true
      StorageEncrypted: true
      MultiAZ: false
      AllocatedStorage: !Ref RDSArchivestorage
      MaxAllocatedStorage: 1000
      VPCSecurityGroups:
        - Fn::GetAtt: [ RestrictedAccessSecurityGroup, GroupId ]
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref Identifier, !Ref EnvironmentName, "archive-db"]]
        - Key: Client
          Value: !Ref TagClient
        - Key: Project
          Value: !Ref TagProject
        - Key: Chargeable
          Value: !Ref TagChargeable

  DBSubnetarchiveGroup:
    Type: "AWS::RDS::DBSubnetGroup"
    Properties:
      DBSubnetGroupDescription: Subnets for the database archive
      SubnetIds:
        - Ref: PrivateSubnet3
        - Ref: PrivateSubnet4

  # S3 Bucket
  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName: !Join [".", [!Ref EnvironmentName, !Ref Identifier,'archieve']]
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: ReportGlacierRule
            Prefix: glacier
            Status: Enabled
            Transitions:
              - TransitionInDays: 1
                StorageClass: GLACIER
      Tags:
          - Key: description
            Value: !Join ["-", [!Ref Identifier, !Ref EnvironmentName, "S3"]]
          - Key: Name
            Value: !Join ["-", [!Ref Identifier, !Ref EnvironmentName, "s3"]]
          - Key: Client
            Value: !Ref TagClient
          - Key: Project
            Value: !Ref TagProject
          - Key: Chargeable
            Value: !Ref TagChargeable

  # CloudFront

  CloudFrontOriginIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: "origin identity"

  publicDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      Tags:
        - Key: Name
          Value:
            !Join ["-", [!Ref Identifier, !Ref EnvironmentName, "CloudFront"]]
        - Key: Client
          Value: !Ref TagClient
        - Key: Project
          Value: !Ref TagProject
        - Key: Chargeable
          Value: !Ref TagChargeable
      DistributionConfig:
        # WebACLId: arn:aws:wafv2:us-east-1:240609415165:global/webacl/Compilation/79c3f22e-8331-4e85-bbe9-48934e886353
        # Aliases:
        #   - !Join [
        #       "",
        #       [!Ref Identifier, "-", !Ref EnvironmentName, ".cambium.co.il"],
        #     ]
        Origins:
          - DomainName: !GetAtt ApplicationLoadBalancer.DNSName
            Id: !Join [".", ["elb", !Ref EnvironmentName, !Ref Identifier]]
            CustomOriginConfig:
              OriginProtocolPolicy: http-only
              OriginSSLProtocols:
                - TLSv1.2
            OriginCustomHeaders:
              - HeaderName: X-Token-Verify
                HeaderValue: l6nsxDx1QDyh1BErDi95MSdG8BgwL39s
        Enabled: "true"
        Comment:
          !Join ["-", [!Ref Identifier, !Ref EnvironmentName, "CloudFront"]]
        DefaultCacheBehavior:
          TargetOriginId: !Join [".", ["elb", !Ref EnvironmentName, !Ref Identifier]]
          ForwardedValues:
            QueryString: 'false'
          ViewerProtocolPolicy: redirect-to-https
        PriceClass: PriceClass_All
        # ViewerCertificate:
        #   SslSupportMethod: sni-only
        #   AcmCertificateArn: arn:aws:acm:us-east-1:240609415165:certificate/0e3d40f5-3d5c-454e-97c8-7abf5bbf3e56
        #   MinimumProtocolVersion: TLSv1.2_2021

